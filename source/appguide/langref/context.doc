.. Sirikata Documentation
   Copyright 2011, Ewen Cheslack-Postava.
   CC-BY, see LICENSE file for details.

.. _contexts:

Contexts/Behaviors
=======================================

High level description
--------
Contexts provide code isolation and a way to structure an entities
various behaviors (eg. does an entity behave as a football player or a
soldier or a poitician?).

Each context is associated with a presence and a visible object.  When
code executed inside the context sends messages, these messages are
"from" this presence.  Similarly, the visible object associated with a
context specifies where code run by a context came from (ie which
presence in the virtual world).  This visible object is privileged, as
described below.  If the code a context runs is not associated with an
external visible object, a scripter should pass in the self object
instead.


New contexts are created directly by the scripter by calling
:ref:`system` system.create_context.  Each new context provides a separate root
object, system-like object called fakeroot (more on this below), and a
:ref:`util` util object.  Functions executed in separate contexts cannot
access data from each other unless they specifically pass the data as
arguments through the context's execute command (also more on this
below).

Contexts may be suspended or resumed by calling suspend or resume on
the context object.  Suspending a context cancels all handlers,
timers, and when conditions associated with that context.
Effectively, no additional code will run within that context.
Resuming a context allows resets the cancelled handlers, timers, and
when conditions.


Exectue
--------
To execute a function within a context, a scripter calls the context's
execute function, passing in the function to execute in the context as
well as any arguments that the function requires.

The runtime automatically binds the first argument of the function to
the context's associated fakeroot object, and also binds the object
"fakeroot" to the context's fakeroot object.  Depending on what flags
were passed in during context creation, through the fakeroot object, a
script can adjust the position of the presence the context is associated with,
send messages to all other entities it encounters, set prox queries, etc.

Between executed functions, data set in the context's global object, persists.


The fakeroot object
--------
The fakeroot object provides :ref:`system` system-like functionality.  A
subset of methods one can call on it:

  * sendHome: Takes an object as its single argument.  Sends a message
    to the visible object associated with the created context.
  * registerHandler: If the context was created so that it can receive
    messages, registerHandler allows the code in the context to
    register a handler to receive and process messages
    that the entity receives.
  * timeout: Set a timeout callback.
  * getPosition: returns the current position of the presence object
    that the context is associated with.
  * setProxQuery: (not finished yet) if the context is created with
    flags set so that code executed in the context can set proximity
    queries for the presence, can be run to set the proximity for the presence.
  * onProxAdded/onProxRemoved: (not finished yet) each takes a
    function as its single argument.  This function specifies how to
    react when non-self presences become apparent and disappear
    (respectively) from the context's associated presence's query results.


Suspension/Resumption
--------
A context itself may be suspended and
resumed.  Suspending a context ensures that no code will run on that
context until it is resumed.  Suspensions and resumptions can only be
done on the context object itself from outside of the context.  (Ie,
code within a context may not suspend or resume the context itself.)

Suspension and resumption allows entities to quickly adapt their
behavior depending on their roles in the virtual world, where they
are, etc.  For instance, an entity can quickly change from playing in
a soccer game to playing in a baseball game by suspending the
handlers, timeouts, etc. of a context associated with the soccer game
and resuming those assocated with a baseball game.

Notes:
--------
  * May change execute function so that it takes in an array of
    arguments instead of just putting each argument separately.
  * Fakeroot may change its name to fakesystem
  * Context may change its name to behavior.
  * May add further restrictions and abilities to fakeroot.
